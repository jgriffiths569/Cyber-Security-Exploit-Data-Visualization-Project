import os
import pandas as pd
import ipaddress
import warnings
import matplotlib.pyplot as plt
from datetime import datetime as dt

# Configure pandas to display up to 10 columns at most
pd.set_option('display.max_columns', 10)

# Ignore any warnings like DtypeWarning etc.
warnings.filterwarnings("ignore")

# Change the working directory to where the data file is located (e.g., Desktop)
os.chdir(r'C:\Users\jonat\Desktop')

# Load the data from a TSV file
df = pd.read_csv('scan_data.txt', sep='\t')

# Show the columns of the dataframe
print(df.columns)

# Filter the dataframe to include only these columns
df = df[['signature', 'timestamp', 'priority', 'src_ip', 'dst_ip']]
print(df.head())  # Show the first few rows to inspect the initial data

# Convert IP addresses from numeric to the standard dotted format (IPv4)
df['src_ip'] = df['src_ip'].apply(lambda x: str(ipaddress.IPv4Address(x)))
df['dst_ip'] = df['dst_ip'].apply(lambda x: str(ipaddress.IPv4Address(x)))
print(df.head())  # Check the conversion of IP addresses

# Analyze the frequency of attack types (signatures)
df_q1 = df['signature'].value_counts().sort_index()
print(df_q1.head())  # Print the most common attack types

# Plot the top 5 attack types
df_q1.head().plot(kind='bar')
plt.tight_layout()
plt.savefig('Q1.png')  # Save the plot to a file
plt.show()  # Display the plot

# Exclude internal IPs from the source IP counts
ip_array = ["96.172.97." + str(i) for i in range(256)]  # Internal IP range
df_src_filtered = df[~df['src_ip'].isin(ip_array)]  # Filter out internal source IPs

# Count the occurrence of source and destination IPs
df_src_common = df_src_filtered['src_ip'].value_counts().head()
df_dst_common = df['dst_ip'].value_counts().head()

# Print and plot the most common external source IPs
print(df_src_common)
df_src_common.plot(kind='bar', title='Common External Source IPs')
plt.savefig('Common_External_Source_IPs.png')
plt.show()

# Print and plot the most common destination IPs
print(df_dst_common)
df_dst_common.plot(kind='bar', title='Common Destination IPs')
plt.savefig('Common_Destination_IPs.png')
plt.show()

# Convert timestamps to dates and simplify them
df['timestamp'] = pd.to_datetime(df['timestamp']).dt.strftime('%m/%d/%Y')

# Group the data by date to count attacks per day
df_q3 = df.groupby('timestamp').count()['signature']
print(df_q3)

# Plot the number of attacks over time
df_q3.plot(title='Attack Frequency Over Time')
plt.xlabel('Date')
plt.ylabel('Number of Attacks')
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('Attacks_Over_Time.png')
plt.show()
